#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Node structure for stack
struct Node {
    char data;
    struct Node *next;
};

struct Node *top = NULL;

// Push operation
void push(char c) {
    struct Node *newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = c;
    newNode->next = top;
    top = newNode;
}

// Pop operation
char pop() {
    if (top == NULL) {
        printf("Stack underflow\n");
        return '\0';
    }
    char c = top->data;
    struct Node *temp = top;
    top = top->next;
    free(temp);
    return c;
}

// Check if stack is empty
int isEmpty() {
    return top == NULL;
}

// Main function
int main() {
    char str[100];
    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    // Remove newline if present
    size_t len = strlen(str);
    if (len > 0 && str[len - 1] == '\n')
        str[len - 1] = '\0';

    // Push each character to stack
    for (int i = 0; str[i] != '\0'; i++) {
        push(str[i]);
    }

    // Pop characters to reverse the string
    printf("Reversed string: ");
    while (!isEmpty()) {
        printf("%c", pop());
    }
    printf("\n");

    return 0;
}
